var o=e=>e instanceof Promise;var s=Symbol("failed"),n=e=>({failed:s,err:e}),a=(e,t)=>{if(o(e))return e.then(r=>i(r)?r:t(r)).catch(r=>n(r));try{return i(e)?e:t(e)}catch(r){return n(r)}},i=e=>e instanceof Object&&e.failed===s,l=(...e)=>async t=>{try{return await e.reduce(a,t)}catch(r){return n(r)}},u=(...e)=>async t=>{try{return await e.reduceRight(a,t)}catch(r){return n(r)}};var m={isFailed:i,railRight:u,rail:l};export{m as default,i as isFailed,l as rail,u as railRight};
