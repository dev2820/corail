var o=e=>e instanceof Promise;var s=Symbol("failed"),t=e=>({failed:s,err:e}),a=(e,n)=>{if(o(e))return e.then(r=>i(r)?r:n(r)).catch(r=>t(r));try{return i(e)?e:n(e)}catch(r){return t(r)}},i=e=>e instanceof Object&&e.failed===s,u=(...e)=>async n=>{try{return await e.reduce(a,n)}catch(r){return t(r)}},F=(...e)=>async n=>{try{return await e.reduceRight(a,n)}catch(r){return t(r)}};var m={isFailed:i,rail:u};export{m as default,i as isFailed,u as rail,F as railRight};
